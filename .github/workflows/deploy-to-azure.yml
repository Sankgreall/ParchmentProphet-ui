name: Build and Deploy to Azure Container App

on:
  push:
    branches:
      - main

env:
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
  CONTAINER_APP_NAME: ${{ vars.CONTAINER_APP_NAME }}
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_LOGIN_SERVER }}.azurecr.io
        username: ${{ secrets.AZURE_ACR_USERNAME }}
        password: ${{ secrets.AZURE_ACR_PASSWORD }}

    - name: Build Docker image
      run: |
        docker buildx create --use
        docker buildx build --platform linux/amd64 -t ui:latest --load .

    - name: Tag Docker image
      run: docker tag ui:latest ${{ env.ACR_LOGIN_SERVER }}.azurecr.io/ui:latest

    - name: Push Docker image
      run: docker push ${{ env.ACR_LOGIN_SERVER }}.azurecr.io/ui:latest

    - name: Azure CLI - Deploy to Azure Container App
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_LOGIN_SERVER }}.azurecr.io/ui:latest \
            --set-env-vars 'OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}' \
            --set-env-vars 'max_output_tokens=8000'
